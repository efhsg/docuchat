"""Initial migration

Revision ID: a6b921bda541
Revises: 
Create Date: 2024-03-06 01:48:33.827619

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "a6b921bda541"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "domains",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "extracted_texts",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("domain_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("type", sa.String(length=10), nullable=False),
        sa.Column("original_name", sa.String(length=255), nullable=False),
        sa.Column("text", mysql.LONGBLOB(), nullable=False),
        sa.ForeignKeyConstraint(["domain_id"], ["domains.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "chunk_processes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("extracted_text_id", sa.Integer(), nullable=False),
        sa.Column("parameters", mysql.JSON(), nullable=True),
        sa.Column("method", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(
            ["extracted_text_id"], ["extracted_texts.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "chunks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("chunk_process_id", sa.Integer(), nullable=False),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("chunk", mysql.LONGBLOB(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chunk_process_id"], ["chunk_processes.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "chunk_process_id", "index", name="_chunk_process_id_index_uc"
        ),
    )
    op.create_table(
        "embedding_processes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("chunk_process_id", sa.Integer(), nullable=False),
        sa.Column("method", sa.String(length=255), nullable=False),
        sa.Column("parameters", mysql.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chunk_process_id"], ["chunk_processes.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "embeddings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("chunk_id", sa.Integer(), nullable=False),
        sa.Column("embedding_process_id", sa.Integer(), nullable=False),
        sa.Column("embedding", mysql.LONGBLOB(), nullable=False),
        sa.ForeignKeyConstraint(["chunk_id"], ["chunks.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["embedding_process_id"], ["embedding_processes.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "chunk_id", "embedding_process_id", name="uix_chunk_id_embedding_process_id"
        ),
    )
    op.create_index("ix_embeddings_chunk_id", "embeddings", ["chunk_id"], unique=False)
    op.create_index(
        "ix_embeddings_embedding_process_id",
        "embeddings",
        ["embedding_process_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("embeddings")
    op.drop_table("embedding_processes")
    op.drop_table("chunks")
    op.drop_table("chunk_processes")
    op.drop_table("extracted_texts")
    op.drop_table("domains")
    # ### end Alembic commands ###
